==========================================================================
			TO DO LIJST -- PROJECT TIJDSREGISTRATIE
==========================================================================

Onderstaand een overzicht van de openstaande acties. Pas gerust aan, waar
het beter kan / anders moet. Zorgen jullie voor verdeling van jullie 
actiepunten?

Opmerking Arjan: Er staan flink wat punten onder mijn naam. Aangezien het 
veel van hetzelfde is, gaat me dat wel lukken. Mocht je wat over willen 
nemen, ook goed. Bijvoorbeeld de aanmaak van een grafiek (via chart.js) is 
iets dat goed losstaand uitgevoerd kan worden. Verder hebben we het eerder 
gehad over nog wat extra JAVA functionaliteit als:
- Export van de database naar Excel
- Archiveren van een jaar (back-up maken en vervolgens verwijderen van een
  jaar.
  
En jullie hebben vast een beter beeld, wat er nog op het niveau van
database en of controller gedaan moet worden.

--------------------------------------------------------------------------
DATABASE
--------------------------------------------------------------------------
1) Meer vulling in database om mooie grafieken te krijgen. (ERWIN / MAARTEN)
2) Toevoegen Beheerder: het snelst is om een user met naam beheerder toe 
   te voegen (dan hoeven we niet apart iets met rollen te doen)
   (ERWIN / MAARTEN)
 
--------------------------------------------------------------------------
LOGICA / API
--------------------------------------------------------------------------
1) Controllers, zie webpagina's (ERWIN / MAARTEN)
2) Willen we nog wat met een YAML of RAML? (documentatie van de API)
   (ERWIN / MAARTEN)
   
--------------------------------------------------------------------------
WEBPAGINA'S ALGEMEEN
--------------------------------------------------------------------------
1) NICE-TO-HAVE: Alleen beheerder krijgt resultaat als hij op de knop 
   'Beheer' drukt(ARJAN)

--------------------------------------------------------------------------
REGISTRATIE.HTML
--------------------------------------------------------------------------
1) Creëren JSON o.b.v ingevuld formulier en verzending met POST (ARJAN)
2) Ophalen JSON en invullen in formulier met GET. (ARJAN)
3) NICE-TO-HAVE: Versnellen paginacreatie door callbacks te gebruiken
   (ARJAN)

--------------------------------------------------------------------------
PROJECTEN.HTML
--------------------------------------------------------------------------
1) Aanmaken pagina met daarin een tabel voor het beheer van de projecten
2) Hoe zien we zo'n pagina voor ons? Het lijkt me dat je raadplegen,
   toevoegen en muteren in één pagina wilt doen. Zie je dan eerst alle
   records (obv GET) en heb je daaronder een aparte regel voor muteren en
   toevoegen? Zijn alle controllers hiervoor aanwezig?   (ERWIN / MAARTEN)

--------------------------------------------------------------------------
MEDEWERKERS.HTML
--------------------------------------------------------------------------
1) Aanmaken pagina met daarin een tabel voor het beheer van de projecten
   (ARJAN)
2) Hoe zien we zo'n pagina voor ons? Het lijkt me dat je raadplegen,
   toevoegen en muteren in één pagina wilt doen. Zie je dan eerst alle
   records (obv GET) en heb je daaronder een aparte regel voor muteren en
   toevoegen? Zijn alle controllers hiervoor aanwezig?   (ERWIN / MAARTEN)

--------------------------------------------------------------------------
RAPPORTAGEPERSOONLIJK.HTML
--------------------------------------------------------------------------
1) Aanmaken pagina (ARJAN)
2) Bepalen inhoud grafieken en tabellen (ERWIN / MAARTEN)
3) Schrijven controller(s) daarvoor. Voor de grafieken geldt ook dat hier
   een JSON object ontvangen moet worden met daarin de labels en waarden
   per dataset   (ERWIN / MAARTEN)
4) Ophalen data en tonen in tabellen (ARJAN)
5) NICE-TO-HAVE: Implementatie grafiek met chart.js (ARJAN)
   
--------------------------------------------------------------------------
RAPPORTAGEAFDELING.HTML
--------------------------------------------------------------------------
1) Aanmaken pagina (ARJAN)
2) Bepalen inhoud grafieken en tabellen (ERWIN / MAARTEN)
3) Schrijven controller(s) daarvoor. Voor de grafieken geldt ook dat hier
   een JSON object ontvangen moet worden met daarin de labels en waarden
   per dataset   (ERWIN / MAARTEN)
4) Ophalen data en tonen in tabellen (ARJAN)
5) NICE-TO-HAVE: Implementatie grafiek met chart.js (ARJAN)








              _
             | |
             | |===( )   //////
             |_|   |||  | o o|
                    ||| ( c  )                  ____
                     ||| \= /                  ||   \_
                      ||||||                   ||     |
                      ||||||                ...||__/|-"
                      ||||||             __|________|__
                        |||             |______________|
                        |||             || ||      || ||
                        |||             || ||      || ||
------------------------|||-------------||-||------||-||-------
                        |__>            || ||      || ||
